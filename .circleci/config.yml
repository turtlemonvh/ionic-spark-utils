version: 2.1

jobs:
  build:
    docker:
      - image: openjdk:8
    environment:
      SBT_VERSION: 1.1.6
    steps:
      - run:
          name: Get sbt binary
          command: |
                    apt update && apt install -y curl
                    curl -L -o sbt-$SBT_VERSION.deb https://dl.bintray.com/sbt/debian/sbt-$SBT_VERSION.deb
                    dpkg -i sbt-$SBT_VERSION.deb
                    rm sbt-$SBT_VERSION.deb
                    apt-get update
                    apt-get install -y git
                    apt-get clean && apt-get autoclean
      - checkout
      - restore_cache:
          key: sbt-cache
      - run:
          name: Compile, package, test
          command: cat /dev/null | sbt clean update "+ test" "+ package" "+ packageSrc" "+ packageDoc"
      - store_test_results:
          path: target/test-reports/
      - save_cache:
          key: sbt-cache
          paths:
            - "~/.ivy2/cache"
            - "~/.sbt"
            - "~/.m2"
      - persist_to_workspace:
          # Capture files like: target/scala-2.11/sparkutil_2.11-0.0.1.jar
          root: target
          paths:
            - scala-2.11/*.jar
            - scala-2.12/*.jar

  release:
    docker:
      # FIXME: We don't really need openjdk
      # https://github.com/docker-library/openjdk/blob/master/8/jdk/Dockerfile
      - image: openjdk:8
    environment:
      # https://github.com/github-release/github-release/releases
      GITHUB_RELEASE_VERSION: v0.8.1
    steps:
      - run:
          name: Get github-release binary
          command: |
                    apt update && apt install -y curl bzip2
                    curl -L https://github.com/github-release/github-release/releases/download/$GITHUB_RELEASE_VERSION/linux-amd64-github-release.bz2 | bunzip2 -v > /usr/local/bin/github-release
                    chmod +x /usr/local/bin/github-release
      - attach_workspace:
          at: /tmp/target
      - run:
          # Note that this will purposefully fail if the version of the code doesn't match the version of the tag
          # We set "GITHUB_ACCESS_TOKEN" for the job in the CircleCI application
          # Process for generating: https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line
          # Detault env vars defined here: https://circleci.com/docs/2.0/env-vars/#built-in-environment-variables
          name: Upload release jars
          command: |
                    export JAR_VERSION=$(echo $CIRCLE_TAG | sed s/^v//g)
                    export GITHUB_TOKEN=$GITHUB_ACCESS_TOKEN
                    for SCALA_VERSION in $(echo 2.11 2.12); do
                      cd /tmp/target/scala-$SCALA_VERSION
                      github-release upload --user $CIRCLE_PROJECT_USERNAME --repo $CIRCLE_PROJECT_REPONAME --tag $CIRCLE_TAG --name ionicsparkutils_$SCALA_VERSION-$JAR_VERSION-javadoc.jar --file ionicsparkutils_$SCALA_VERSION-$JAR_VERSION.jar
                      github-release upload --user $CIRCLE_PROJECT_USERNAME --repo $CIRCLE_PROJECT_REPONAME --tag $CIRCLE_TAG --name ionicsparkutils_$SCALA_VERSION-$JAR_VERSION-sources.jar --file ionicsparkutils_$SCALA_VERSION-$JAR_VERSION.jar
                      github-release upload --user $CIRCLE_PROJECT_USERNAME --repo $CIRCLE_PROJECT_REPONAME --tag $CIRCLE_TAG --name ionicsparkutils_$SCALA_VERSION-$JAR_VERSION.jar --file ionicsparkutils_$SCALA_VERSION-$JAR_VERSION.jar
                    done

# https://circleci.com/docs/2.0/workflows/
workflows:
  version: 2
  main:
    jobs:
      - build:
          filters:
            tags:
              only: /^v.*/
      - release:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
